@startuml
package PController {
Controller ..> IController

    class Controller {
        ~void nextFrame()
        ~void startNewGame()
        ..Getter..
    }
    interface IController {
    }
}

package PView{
Grid ..> IGrid

    class Grid{
        +void settings()
        +void setup()
        +void draw()
        +void drawTile()
        +void drawField()
        +void mousePressed()
    }
    interface IGrid{
        +void settings()
        +void setup()
        +void draw()
        +void drawTile()
        +void drawField()
        +void mousePressed()
    }
}

package PModel{
class Piece{
    ~void move()
}

class Player{
}

enum GameState{
    ~START
    ~PLAYING
    ~END
}

enum FieldState{
    ~BLACK
    ~WHITE
    ~FREE
}

Game ..> IGame
interface IGame{
}
class Game{
    -Piece piece
    -Player player
    -void startNewGame()
    -boolean isEmpty()
    -void updatePoints()
    -String toString()
    -boolean isValidMove()
    -List<Integer> validMoves()
    }
}
@enduml